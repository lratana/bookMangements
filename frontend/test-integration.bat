@echo off
echo === Library Management System Integration Test ===
echo.

echo 1. Testing Backend API Connection...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8080/api/books' -Method GET -TimeoutSec 5; Write-Host '‚úÖ Backend API is running on http://localhost:8080' -ForegroundColor Green } catch { Write-Host '‚ùå Backend API is not running. Please start the Node.js server first.' -ForegroundColor Red; Write-Host '   Run: cd .. && node server.js' -ForegroundColor Yellow; exit 1 }"

echo.
echo 2. Testing API Endpoints...

echo üìö Testing Books API...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8080/api/books' -Method GET -TimeoutSec 5; if ($response.StatusCode -eq 200) { Write-Host '   ‚úÖ Books API working' -ForegroundColor Green } } catch { Write-Host '   ‚ùå Books API failed' -ForegroundColor Red }"

echo üë• Testing Users API...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8080/api/users' -Method GET -TimeoutSec 5; if ($response.StatusCode -eq 200) { Write-Host '   ‚úÖ Users API working' -ForegroundColor Green } } catch { Write-Host '   ‚ùå Users API failed' -ForegroundColor Red }"

echo üë®‚Äçüíº Testing Librarians API...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8080/api/librarians' -Method GET -TimeoutSec 5; if ($response.StatusCode -eq 200) { Write-Host '   ‚úÖ Librarians API working' -ForegroundColor Green } } catch { Write-Host '   ‚ùå Librarians API failed' -ForegroundColor Red }"

echo üìñ Testing Borrowings API...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:8080/api/borrows' -Method GET -TimeoutSec 5; if ($response.StatusCode -eq 200) { Write-Host '   ‚úÖ Borrowings API working' -ForegroundColor Green } } catch { Write-Host '   ‚ùå Borrowings API failed' -ForegroundColor Red }"

echo.
echo 3. Frontend Setup Status...
if exist "node_modules" (
    echo ‚úÖ Vue.js dependencies installed
) else (
    echo ‚ùå Vue.js dependencies not installed. Run: npm install
)

if exist "package.json" (
    echo ‚úÖ Vue.js project configured
) else (
    echo ‚ùå Vue.js project not configured
)

echo.
echo === Integration Test Complete ===
echo.
echo üöÄ To start the Vue.js frontend:
echo    npm run serve
echo.
echo üåê Access URLs:
echo    Frontend: http://localhost:3000
echo    Backend:  http://localhost:8080
echo.
echo üìñ To test the full integration:
echo    1. Start backend: cd .. ^&^& node server.js
echo    2. Start frontend: npm run serve
echo    3. Open browser: http://localhost:3000

pause